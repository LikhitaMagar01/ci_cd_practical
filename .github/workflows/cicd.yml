# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["ec2-docker-deploy"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create .env file
        run: echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env && echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
      - name: Build Docker image
        run: docker build -t leekhitame/ci_cd_practical .
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}"      
      - name: Publish image to Docker Hub
        run: docker push leekhitame/ci_cd_practical:latest

  # Deployment job
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from Docker Hub
        run: docker pull leekhitame/ci_cd_practical:latest
      - name: Delete old container (if exists)
        run: docker rm -f lifevoyage-next-project-container || true
      - name: Run Docker container
        run: docker run -d -p 3000:3000 --name lifevoyage-next-project-container leekhitame/ci_cd_practical:latest
